{"version":3,"sources":["common/Header.js","home/Card.js","api/index.js","common/ErrorMessage.js","home/CardList.js","user/UserProfile.js","user/NoPostSelectedMessage.js","user/Post.js","user/PostLink.js","user/PostList.js","user/PostsNav.js","user/User.js","common/NotFound.js","App.js","index.js"],"names":["Header","className","Card","user","posts","to","id","name","length","deletePost","ignoreAbortError","fetchUsersWithPosts","fetchUserWithPosts","delegate","a","delegateArguments","apply","postId","signal","url","fetch","method","response","json","userId","status","Error","fetchPostsForUser","fetchUsers","users","Promise","all","map","then","ErrorMessage","error","children","style","color","message","CardList","useState","setUsers","undefined","setError","useEffect","abortController","AbortController","catch","abort","list","UserProfile","role","aria-labelledby","username","email","phone","company","website","NoPostSelectedMessage","Post","useParams","post","find","Number","history","useHistory","handleDelete","window","confirm","push","title","body","onClick","PostLink","useRouteMatch","PostList","postLinks","path","exact","PostsNav","aria-label","User","setUser","NotFound","App","console","log","useLocation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed6ff755.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => (\n  <div className=\"jumbotron jumbotron-fluid bg-warning\">\n    <div className=\"container\">\n      <h1 className=\"display-4\">Community Blog</h1>\n      <p className=\"lead\">Check out the posts of our community members.</p>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n/*\n  TODO: Change the link below to go to the user route, using the user's ID.\n  /users/:userId\n*/\n\nexport const Card = ({ user = { posts: [] } }) => (\n  <article className=\"col-12 col-md-6 col-xl-3 my-2 align-self-stretch\">\n    <div className=\"border p-4 h-100 d-flex flex-column\">\n      <h2 className=\"font-weight-lighter flex-fill\">\n        <Link to={\"/users/\"+user.id}>{user.name}</Link>\n      </h2>\n      <Link to={`/users/${user.id}/posts`} className=\"mt-2\">{user.posts.length} Posts Â»</Link>\n    </div>\n  </article>\n);\n\nexport default Card;\n","export const deletePost = ignoreAbortError(deletePostDelegate);\nexport const fetchUsersWithPosts = ignoreAbortError(\n  fetchUsersWithPostsDelegate\n);\nexport const fetchUserWithPosts = ignoreAbortError(fetchUserWithPostsDelegate);\n\nfunction ignoreAbortError(delegate) {\n  return async (...delegateArguments) => {\n    try {\n      return await delegate.apply(null, delegateArguments);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  };\n}\n\nasync function deletePostDelegate(postId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts/${postId}`;\n  const response = await fetch(url, { method: \"DELETE\", signal });\n  return response.json();\n}\n\nasync function fetchUserWithPostsDelegate(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/users/${userId}`;\n  const response = await fetch(url, { signal });\n  if (response.status !== 200) {\n    throw new Error(`User not found with ID: ${userId}`);\n  }\n  const user = await response.json();\n  user.posts = await fetchPostsForUser(userId, signal);\n  return user;\n}\n\nasync function fetchUsersWithPostsDelegate(signal) {\n  try {\n    const users = await fetchUsers(signal);\n    return await Promise.all(\n      users.map((user) =>\n        fetchPostsForUser(user.id, signal).then((posts) => {\n          user.posts = posts;\n          return user;\n        })\n      )\n    );\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\nasync function fetchUsers(signal) {\n  const url = `https://jsonplaceholder.typicode.com/users`;\n  const response = await fetch(url, { signal });\n  return response.json();\n}\n\nasync function fetchPostsForUser(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n  const response = await fetch(url, { signal });\n  return response.json();\n}\n","import React from \"react\";\n\nexport const ErrorMessage = ({ error, children }) => (\n  <main className=\"container\">\n    <p style={{ color: \"red\" }}>ERROR: {error.message}</p>\n    {children}\n  </main>\n);\n\nexport default ErrorMessage;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\n\nimport { fetchUsersWithPosts } from \"../api\";\nimport ErrorMessage from \"../common/ErrorMessage\";\n\nexport const CardList = () => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    fetchUsersWithPosts(abortController.signal).then(setUsers).catch(setError);\n\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n  const list = users.map((user) => <Card key={user.id} user={user} />);\n\n  return (\n    <main className=\"container\">\n      <section className=\"row\">{list}</section>\n    </main>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nexport const UserProfile = ({ user }) => {\n  return (\n    <div\n      className=\"tab-pane active pt-2\"\n      role=\"tabpanel\"\n      aria-labelledby=\"profle-tab\"\n    >\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>User Name</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.username}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>EMail</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.email}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>Phone</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.phone}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>Company</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{(user.company || {}).name}</div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-sm-3 col-md-2 col-5\">\n          <label>Website</label>\n        </div>\n        <div className=\"col-md-8 col-6\">{user.website}</div>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\n\nexport const NoPostSelectedMessage = () => (\n  <article className=\"col-12 border p-4\">\n    <p className=\"mb-0\">No post selected...</p>\n  </article>\n);\n\nexport default NoPostSelectedMessage;\n","import React from \"react\";\nimport {useParams,useHistory} from \"react-router-dom\";\nimport { deletePost } from \"../api\";\n\nimport NoPostSelectedMessage from \"./NoPostSelectedMessage\";\n\nexport const Post = ({ posts }) => {\n  const {postId} = useParams(); // TODO: This ID will need to be pulled from parameters.\n  const post = posts.find((post) => post.id === Number(postId));\n\n  const history=useHistory();\n\n  const handleDelete = async (id) => {\n    const result = window.confirm(\"Are you sure you want to delete this post?\");\n    if (result) {\n      await deletePost(id);\n      history.push(\"/\");\n      // TODO: After the post is deleted, send the user to the home page.\n    }\n  };\n\n  if (post) {\n    return (\n      <article className=\"col-12 p-4 border\">\n        <h3 className=\"display-4 mb-4\">{post.title}</h3>\n        <p>{post.body}</p>\n        <button className=\"btn btn-danger\" onClick={handleDelete}>\n          Delete Post\n        </button>\n      </article>\n    );\n  }\n  return <NoPostSelectedMessage />;\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Link,useRouteMatch } from \"react-router-dom\";\n\n/*\n  TODO: Change the below to be a link that goes to the specific post route using the post id.\n*/\n\nexport const PostLink = ({ post }) => {\n    const {url}=useRouteMatch();\n  return (\n    <li className=\"list-group-item text-truncate\">\n      <Link to={url+\"/\"+post.id}>{post.title}</Link>\n    </li>\n  );\n};\n\nexport default PostLink;\n","import React from \"react\";\n\nimport Post from \"./Post\";\nimport PostLink from \"./PostLink\";\nimport NoPostSelectedMessage from \"./NoPostSelectedMessage\";\nimport { Switch } from \"react-router\";\nimport { Route,useRouteMatch } from \"react-router-dom\";\n\n/*\n  TODO: Update the below so that the components show on the appropriate route.\n\n  The <NoPostSelectedMessage /> component should show up on the following route:\n  /users/:userId/posts\n\n  The <Post /> component should show up on the following route:\n  /users/:userId/posts/:postId\n*/\n\nexport const PostList = ({ posts }) => {\n  const postLinks = posts.map((post) => (\n    <PostLink key={post.id} userId={post.userId} post={post} />\n  ));\n  const {url}=useRouteMatch();\n\n  return (\n    <div className=\"row pt-2\">\n      <div className=\"col-3\">\n        <ul className=\"list-group\">{postLinks}</ul>\n      </div>\n      <div className=\"col-9\">\n        <Switch>\n          \n            <Route path={url} exact={true}>\n               <NoPostSelectedMessage />\n            </Route>\n\n            <Route path={url+\"/:postId\"} >\n                <Post posts={posts} />\n            </Route>\n\n\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default PostList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// TODO: Change the link below to go back to the home page.\n\nexport const PostsNav = () => (\n  <nav aria-label=\"breadcrumb\">\n    <ol className=\"breadcrumb\">\n      <li className=\"breadcrumb-item\">\n        <Link to=\"/\" className=\"btn btn-link\">Go Home</Link>\n      </li>\n    </ol>\n  </nav>\n);\n\nexport default PostsNav;\n","import React, { useEffect, useState } from \"react\";\nimport UserProfile from \"./UserProfile\";\nimport { fetchUserWithPosts } from \"../api\";\nimport PostList from \"./PostList\";\nimport PostsNav from \"./PostsNav\";\nimport ErrorMessage from \"../common/ErrorMessage\";\nimport {Link,Route,Switch,useParams,useRouteMatch} from \"react-router-dom\"\n\nexport const User = () => {\n  const [user, setUser] = useState({ posts: [] });\n  const [error, setError] = useState(undefined);\n  const {userId} = useParams(); // TODO: This ID will need to be pulled from parameters.\n  const {path,url}=useRouteMatch();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchUserWithPosts(userId, abortController.signal)\n      .then(setUser)\n      .catch(setError);\n\n    return () => abortController.abort();\n  }, [userId]);\n\n  // TODO: Change the link below to go back to the home page.\n\n  if (error) {\n    return (\n      <ErrorMessage error={error}>\n        <p>\n        <Link to=\"/\">Return Home</Link>\n        </p>\n      </ErrorMessage>\n    );\n  }\n\n  /*\n    TODO: In the below section, update the links to work appropriately with React Router.\n\n    TODO: You'll need to add nested routes below.\n\n    The <PostList /> component should show on the following route:\n    /users/:userId/posts\n\n    The <UserProfile /> component should show on the following route:\n    /users/:userId\n  */\n  return (\n    <section className=\"container\">\n      <PostsNav />\n      <div className=\"border p-4 h-100 d-flex flex-column\">\n        <h2 className=\"mb-3\">{user.name}</h2>\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <Link to={url} className=\"nav-link\">Profile</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={url+\"/posts\"} className=\"nav-link\">Posts</Link>\n          </li>\n        </ul>\n\n        {user.id ? (\n          <div className=\"p-4 border border-top-0\">\n            <Switch>\n              <Route path={url} exact={true}>\n                  <UserProfile user={user} />\n              </Route>\n\n              <Route path={url+\"/posts\"}>\n                  <PostList posts={user.posts} />\n              </Route>\n\n            </Switch>\n          </div>\n        ) : (\n          <div className=\"p-4 border border-top-0\">\n            <p>Loading...</p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/*\n  TODO: Change the <a> below to a <Link> to the home page\n*/\n\nexport const NotFound = () => (\n  <main className=\"container\">\n    <p>Page not found!</p>\n    <p>\n      <Link to=\"/\">Return Home</Link>\n    </p>\n  </main>\n);\n\nexport default NotFound;\n","import React, { Fragment } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nimport Header from \"./common/Header\";\nimport CardList from \"./home/CardList\";\nimport User from \"./user/User\";\nimport NotFound from \"./common/NotFound\";\n\nfunction App() {\n  /*\n    TODO: There is no need to add a <Router >, it is in index.js.\n\n    The <CardList /> component should be shown when the user is on the index path.\n\n    The <User /> component should be shown when the user is on the following path:\n    /users/:userId\n\n    Display <NotFound /> when appropriate\n  */\n  console.log(\"render App\");\n  const location=useLocation();\n  return (\n    <Fragment>\n      <Header />\n      <Switch>\n          <Route path=\"/\" exact={true}>\n            <CardList />\n          </Route>\n          <Route path={\"/users/:userId\"}>\n            <User />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n      </Switch>\n      \n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bootstrap.min.css\";\nimport \"./style.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}